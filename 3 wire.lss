
3 wire.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a28  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000096  00800060  00000a28  00000a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b32  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b64  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f8  00000000  00000000  00000ba0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001831  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c0  00000000  00000000  000024c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a6f  00000000  00000000  00002d89  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000194  00000000  00000000  000037f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000475  00000000  00000000  0000398c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b83  00000000  00000000  00003e01  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00004984  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e2       	ldi	r30, 0x28	; 40
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3f       	cpi	r26, 0xF6	; 246
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 2e 01 	call	0x25c	; 0x25c <main>
  7a:	0c 94 12 05 	jmp	0xa24	; 0xa24 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
  82:	85 b3       	in	r24, 0x15	; 21
  84:	80 64       	ori	r24, 0x40	; 64
  86:	85 bb       	out	0x15, r24	; 21
  88:	00 c0       	rjmp	.+0      	; 0x8a <toggle_e+0x8>
  8a:	85 b3       	in	r24, 0x15	; 21
  8c:	8f 7b       	andi	r24, 0xBF	; 191
  8e:	85 bb       	out	0x15, r24	; 21
  90:	08 95       	ret

00000092 <lcd_write>:
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	d8 2f       	mov	r29, r24
  98:	66 23       	and	r22, r22
  9a:	21 f0       	breq	.+8      	; 0xa4 <lcd_write+0x12>
  9c:	85 b3       	in	r24, 0x15	; 21
  9e:	80 61       	ori	r24, 0x10	; 16
  a0:	85 bb       	out	0x15, r24	; 21
  a2:	03 c0       	rjmp	.+6      	; 0xaa <lcd_write+0x18>
  a4:	85 b3       	in	r24, 0x15	; 21
  a6:	8f 7e       	andi	r24, 0xEF	; 239
  a8:	85 bb       	out	0x15, r24	; 21
  aa:	85 b3       	in	r24, 0x15	; 21
  ac:	8f 7d       	andi	r24, 0xDF	; 223
  ae:	85 bb       	out	0x15, r24	; 21
  b0:	84 b3       	in	r24, 0x14	; 20
  b2:	8f 60       	ori	r24, 0x0F	; 15
  b4:	84 bb       	out	0x14, r24	; 20
  b6:	c5 b3       	in	r28, 0x15	; 21
  b8:	c0 7f       	andi	r28, 0xF0	; 240
  ba:	8d 2f       	mov	r24, r29
  bc:	82 95       	swap	r24
  be:	8f 70       	andi	r24, 0x0F	; 15
  c0:	8c 2b       	or	r24, r28
  c2:	85 bb       	out	0x15, r24	; 21
  c4:	0e 94 41 00 	call	0x82	; 0x82 <toggle_e>
  c8:	df 70       	andi	r29, 0x0F	; 15
  ca:	dc 2b       	or	r29, r28
  cc:	d5 bb       	out	0x15, r29	; 21
  ce:	0e 94 41 00 	call	0x82	; 0x82 <toggle_e>
  d2:	cf 60       	ori	r28, 0x0F	; 15
  d4:	c5 bb       	out	0x15, r28	; 21
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	08 95       	ret

000000dc <lcd_read>:
  dc:	88 23       	and	r24, r24
  de:	21 f0       	breq	.+8      	; 0xe8 <lcd_read+0xc>
  e0:	85 b3       	in	r24, 0x15	; 21
  e2:	80 61       	ori	r24, 0x10	; 16
  e4:	85 bb       	out	0x15, r24	; 21
  e6:	03 c0       	rjmp	.+6      	; 0xee <lcd_read+0x12>
  e8:	85 b3       	in	r24, 0x15	; 21
  ea:	8f 7e       	andi	r24, 0xEF	; 239
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	85 b3       	in	r24, 0x15	; 21
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	85 bb       	out	0x15, r24	; 21
  f4:	84 b3       	in	r24, 0x14	; 20
  f6:	80 7f       	andi	r24, 0xF0	; 240
  f8:	84 bb       	out	0x14, r24	; 20
  fa:	85 b3       	in	r24, 0x15	; 21
  fc:	80 64       	ori	r24, 0x40	; 64
  fe:	85 bb       	out	0x15, r24	; 21
 100:	00 c0       	rjmp	.+0      	; 0x102 <lcd_read+0x26>
 102:	93 b3       	in	r25, 0x13	; 19
 104:	92 95       	swap	r25
 106:	90 7f       	andi	r25, 0xF0	; 240
 108:	85 b3       	in	r24, 0x15	; 21
 10a:	8f 7b       	andi	r24, 0xBF	; 191
 10c:	85 bb       	out	0x15, r24	; 21
 10e:	00 c0       	rjmp	.+0      	; 0x110 <lcd_read+0x34>
 110:	85 b3       	in	r24, 0x15	; 21
 112:	80 64       	ori	r24, 0x40	; 64
 114:	85 bb       	out	0x15, r24	; 21
 116:	00 c0       	rjmp	.+0      	; 0x118 <lcd_read+0x3c>
 118:	83 b3       	in	r24, 0x13	; 19
 11a:	8f 70       	andi	r24, 0x0F	; 15
 11c:	25 b3       	in	r18, 0x15	; 21
 11e:	2f 7b       	andi	r18, 0xBF	; 191
 120:	25 bb       	out	0x15, r18	; 21
 122:	89 2b       	or	r24, r25
 124:	08 95       	ret

00000126 <lcd_waitbusy>:
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_read>
 12c:	88 23       	and	r24, r24
 12e:	dc f3       	brlt	.-10     	; 0x126 <lcd_waitbusy>
 130:	88 e0       	ldi	r24, 0x08	; 8
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <lcd_waitbusy+0xe>
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_read>
 13e:	08 95       	ret

00000140 <lcd_command>:
 140:	cf 93       	push	r28
 142:	c8 2f       	mov	r28, r24
 144:	0e 94 93 00 	call	0x126	; 0x126 <lcd_waitbusy>
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	8c 2f       	mov	r24, r28
 14c:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <lcd_gotoxy>:
 154:	61 11       	cpse	r22, r1
 156:	04 c0       	rjmp	.+8      	; 0x160 <lcd_gotoxy+0xc>
 158:	80 58       	subi	r24, 0x80	; 128
 15a:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
 15e:	08 95       	ret
 160:	80 54       	subi	r24, 0x40	; 64
 162:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
 166:	08 95       	ret

00000168 <lcd_clrscr>:
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
 16e:	08 95       	ret

00000170 <lcd_home>:
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
 176:	08 95       	ret

00000178 <lcd_putc>:
 178:	cf 93       	push	r28
 17a:	c8 2f       	mov	r28, r24
 17c:	0e 94 93 00 	call	0x126	; 0x126 <lcd_waitbusy>
 180:	ca 30       	cpi	r28, 0x0A	; 10
 182:	49 f4       	brne	.+18     	; 0x196 <lcd_putc+0x1e>
 184:	80 34       	cpi	r24, 0x40	; 64
 186:	10 f4       	brcc	.+4      	; 0x18c <lcd_putc+0x14>
 188:	80 e4       	ldi	r24, 0x40	; 64
 18a:	01 c0       	rjmp	.+2      	; 0x18e <lcd_putc+0x16>
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	80 58       	subi	r24, 0x80	; 128
 190:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
 194:	04 c0       	rjmp	.+8      	; 0x19e <lcd_putc+0x26>
 196:	61 e0       	ldi	r22, 0x01	; 1
 198:	8c 2f       	mov	r24, r28
 19a:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
 19e:	cf 91       	pop	r28
 1a0:	08 95       	ret

000001a2 <lcd_puts>:
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	fc 01       	movw	r30, r24
 1a8:	03 c0       	rjmp	.+6      	; 0x1b0 <lcd_puts+0xe>
 1aa:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_putc>
 1ae:	fe 01       	movw	r30, r28
 1b0:	ef 01       	movw	r28, r30
 1b2:	21 96       	adiw	r28, 0x01	; 1
 1b4:	80 81       	ld	r24, Z
 1b6:	81 11       	cpse	r24, r1
 1b8:	f8 cf       	rjmp	.-16     	; 0x1aa <lcd_puts+0x8>
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 1c0:	1f 93       	push	r17
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	18 2f       	mov	r17, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
 1c8:	84 b3       	in	r24, 0x14	; 20
 1ca:	8f 67       	ori	r24, 0x7F	; 127
 1cc:	84 bb       	out	0x14, r24	; 20
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	9a ef       	ldi	r25, 0xFA	; 250
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <lcd_init+0x12>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
 1d6:	85 b3       	in	r24, 0x15	; 21
 1d8:	82 60       	ori	r24, 0x02	; 2
 1da:	85 bb       	out	0x15, r24	; 21
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
 1dc:	85 b3       	in	r24, 0x15	; 21
 1de:	81 60       	ori	r24, 0x01	; 1
 1e0:	85 bb       	out	0x15, r24	; 21
    lcd_e_toggle();
 1e2:	0e 94 41 00 	call	0x82	; 0x82 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	9e e4       	ldi	r25, 0x4E	; 78
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <lcd_init+0x2a>
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 1ee:	0e 94 41 00 	call	0x82	; 0x82 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 1f2:	c0 e0       	ldi	r28, 0x00	; 0
 1f4:	d1 e0       	ldi	r29, 0x01	; 1
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <lcd_init+0x38>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 1fc:	0e 94 41 00 	call	0x82	; 0x82 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 200:	ce 01       	movw	r24, r28
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <lcd_init+0x42>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 206:	85 b3       	in	r24, 0x15	; 21
 208:	8e 7f       	andi	r24, 0xFE	; 254
 20a:	85 bb       	out	0x15, r24	; 21
    lcd_e_toggle();
 20c:	0e 94 41 00 	call	0x82	; 0x82 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 210:	21 97       	sbiw	r28, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <lcd_init+0x50>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 214:	88 e2       	ldi	r24, 0x28	; 40
 216:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 21a:	88 e0       	ldi	r24, 0x08	; 8
 21c:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 220:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 224:	86 e0       	ldi	r24, 0x06	; 6
 226:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 22a:	81 2f       	mov	r24, r17
 22c:	0e 94 a0 00 	call	0x140	; 0x140 <lcd_command>

}/* lcd_init */
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	1f 91       	pop	r17
 236:	08 95       	ret

00000238 <adc_init>:
#include "Lcdlbr/lcd.h"


void adc_init()
{
	ADMUX = (1<<REFS0);
 238:	80 e4       	ldi	r24, 0x40	; 64
 23a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(0<<ADPS0);
 23c:	86 e8       	ldi	r24, 0x86	; 134
 23e:	86 b9       	out	0x06, r24	; 6
 240:	08 95       	ret

00000242 <adc_read>:
}
uint16_t adc_read(uint8_t ch)
{
	ch &= 0b00000111;
 242:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|ch;
 244:	97 b1       	in	r25, 0x07	; 7
 246:	98 7f       	andi	r25, 0xF8	; 248
 248:	89 2b       	or	r24, r25
 24a:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);
 24c:	86 b1       	in	r24, 0x06	; 6
 24e:	80 64       	ori	r24, 0x40	; 64
 250:	86 b9       	out	0x06, r24	; 6
	while(ADCSRA & (1<<ADSC));
 252:	36 99       	sbic	0x06, 6	; 6
 254:	fe cf       	rjmp	.-4      	; 0x252 <adc_read+0x10>
	return (ADC);
 256:	84 b1       	in	r24, 0x04	; 4
 258:	95 b1       	in	r25, 0x05	; 5
}
 25a:	08 95       	ret

0000025c <main>:
int main()
{
 25c:	cf 93       	push	r28
 25e:	df 93       	push	r29
 260:	cd b7       	in	r28, 0x3d	; 61
 262:	de b7       	in	r29, 0x3e	; 62
 264:	2a 97       	sbiw	r28, 0x0a	; 10
 266:	0f b6       	in	r0, 0x3f	; 63
 268:	f8 94       	cli
 26a:	de bf       	out	0x3e, r29	; 62
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	cd bf       	out	0x3d, r28	; 61
	DDRB=0x00;
 270:	17 ba       	out	0x17, r1	; 23
	PORTB=0b10010010;
 272:	82 e9       	ldi	r24, 0x92	; 146
 274:	88 bb       	out	0x18, r24	; 24
	DDRD=0xff;
 276:	8f ef       	ldi	r24, 0xFF	; 255
 278:	81 bb       	out	0x11, r24	; 17
	uint16_t adc0, adc1;
	uint8_t wh,wl,rh,rl ;
	int temp,far,s,a,b;
	char buffer[10];
	adc_init();
 27a:	0e 94 1c 01 	call	0x238	; 0x238 <adc_init>
	lcd_init(LCD_DISP_ON_CURSOR);
 27e:	8e e0       	ldi	r24, 0x0E	; 14
 280:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_init>
	lcd_clrscr();
 284:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
	lcd_gotoxy(0,0);
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
	lcd_puts("Starting System");
 290:	80 e6       	ldi	r24, 0x60	; 96
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
	lcd_gotoxy(0,1);
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
	lcd_puts(".");
 2a0:	84 e7       	ldi	r24, 0x74	; 116
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a8:	87 ea       	ldi	r24, 0xA7	; 167
 2aa:	91 e6       	ldi	r25, 0x61	; 97
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <main+0x50>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x56>
 2b2:	00 00       	nop
	_delay_ms(100);
	lcd_puts("..");
 2b4:	83 e7       	ldi	r24, 0x73	; 115
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 2bc:	87 ea       	ldi	r24, 0xA7	; 167
 2be:	91 e6       	ldi	r25, 0x61	; 97
 2c0:	01 97       	sbiw	r24, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <main+0x64>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x6a>
 2c6:	00 00       	nop
	_delay_ms(100);
	lcd_puts("...");
 2c8:	82 e7       	ldi	r24, 0x72	; 114
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 2d0:	87 ea       	ldi	r24, 0xA7	; 167
 2d2:	91 e6       	ldi	r25, 0x61	; 97
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x78>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x7e>
 2da:	00 00       	nop
	_delay_ms(100);
	lcd_puts("....");
 2dc:	81 e7       	ldi	r24, 0x71	; 113
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 2e4:	87 ea       	ldi	r24, 0xA7	; 167
 2e6:	91 e6       	ldi	r25, 0x61	; 97
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <main+0x8c>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <main+0x92>
 2ee:	00 00       	nop
	_delay_ms(100);
	lcd_puts(".....");
 2f0:	80 e7       	ldi	r24, 0x70	; 112
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 2f8:	87 ea       	ldi	r24, 0xA7	; 167
 2fa:	91 e6       	ldi	r25, 0x61	; 97
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <main+0xa0>
 300:	00 c0       	rjmp	.+0      	; 0x302 <main+0xa6>
 302:	00 00       	nop
	_delay_ms(100);
	while (1)
	{
		lcd_clrscr();
 304:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
		lcd_gotoxy(0,0);
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
		lcd_puts("System Started");
 310:	86 e7       	ldi	r24, 0x76	; 118
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
		lcd_gotoxy(0,1);
 318:	61 e0       	ldi	r22, 0x01	; 1
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
		lcd_puts("Initial?Reload?");
 320:	85 e8       	ldi	r24, 0x85	; 133
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 328:	9f e5       	ldi	r25, 0x5F	; 95
 32a:	2a ee       	ldi	r18, 0xEA	; 234
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	91 50       	subi	r25, 0x01	; 1
 330:	20 40       	sbci	r18, 0x00	; 0
 332:	80 40       	sbci	r24, 0x00	; 0
 334:	e1 f7       	brne	.-8      	; 0x32e <main+0xd2>
 336:	00 c0       	rjmp	.+0      	; 0x338 <main+0xdc>
 338:	00 00       	nop
		_delay_ms(300);
		if((PINB & (1<<7))==0)//rel
 33a:	b7 99       	sbic	0x16, 7	; 22
 33c:	16 c0       	rjmp	.+44     	; 0x36a <main+0x10e>
		{
			rh = eeprom_read_byte((uint8_t*)0);
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <eeprom_read_byte>
			a=rh;
 346:	08 2f       	mov	r16, r24
 348:	10 e0       	ldi	r17, 0x00	; 0
			rl = eeprom_read_byte((uint8_t*)4);
 34a:	84 e0       	ldi	r24, 0x04	; 4
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <eeprom_read_byte>
			b=rl;
 352:	e8 2e       	mov	r14, r24
 354:	f1 2c       	mov	r15, r1
 356:	9f e5       	ldi	r25, 0x5F	; 95
 358:	2a ee       	ldi	r18, 0xEA	; 234
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	91 50       	subi	r25, 0x01	; 1
 35e:	20 40       	sbci	r18, 0x00	; 0
 360:	80 40       	sbci	r24, 0x00	; 0
 362:	e1 f7       	brne	.-8      	; 0x35c <main+0x100>
 364:	00 c0       	rjmp	.+0      	; 0x366 <main+0x10a>
 366:	00 00       	nop
 368:	b4 c0       	rjmp	.+360    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
			_delay_ms(300);
			goto measure;
		}
		if((PINB & (1<<4))==0)//ini
 36a:	b4 99       	sbic	0x16, 4	; 22
 36c:	cb cf       	rjmp	.-106    	; 0x304 <main+0xa8>
		{
			eeprom_update_byte ((uint8_t*) 0, 30);
 36e:	6e e1       	ldi	r22, 0x1E	; 30
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	0e 94 01 05 	call	0xa02	; 0xa02 <eeprom_update_byte>
			rh = eeprom_read_byte((uint8_t*)0);
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <eeprom_read_byte>
			a=rh;
 380:	08 2f       	mov	r16, r24
 382:	10 e0       	ldi	r17, 0x00	; 0
			eeprom_update_byte ((uint8_t*) 4, 15);
 384:	6f e0       	ldi	r22, 0x0F	; 15
 386:	84 e0       	ldi	r24, 0x04	; 4
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 01 05 	call	0xa02	; 0xa02 <eeprom_update_byte>
			rl = eeprom_read_byte((uint8_t*)4);
 38e:	84 e0       	ldi	r24, 0x04	; 4
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <eeprom_read_byte>
			b=rl;
 396:	e8 2e       	mov	r14, r24
 398:	f1 2c       	mov	r15, r1
			while(1)
			{
				high:
				lcd_clrscr();
 39a:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
				lcd_gotoxy(0,0);
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
				lcd_puts("High temp=");
 3a6:	85 e9       	ldi	r24, 0x95	; 149
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
				itoa(a,buffer,10);
 3ae:	4a e0       	ldi	r20, 0x0A	; 10
 3b0:	50 e0       	ldi	r21, 0x00	; 0
 3b2:	be 01       	movw	r22, r28
 3b4:	6f 5f       	subi	r22, 0xFF	; 255
 3b6:	7f 4f       	sbci	r23, 0xFF	; 255
 3b8:	c8 01       	movw	r24, r16
 3ba:	0e 94 b9 04 	call	0x972	; 0x972 <itoa>
				lcd_puts(buffer);
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
				lcd_gotoxy(12,0);
 3c6:	60 e0       	ldi	r22, 0x00	; 0
 3c8:	8c e0       	ldi	r24, 0x0C	; 12
 3ca:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
				lcd_puts("'C");
 3ce:	80 ea       	ldi	r24, 0xA0	; 160
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
				lcd_gotoxy(0,1);
 3d6:	61 e0       	ldi	r22, 0x01	; 1
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
				lcd_puts("Set? Inc? Dec?");
 3de:	83 ea       	ldi	r24, 0xA3	; 163
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 3e6:	9f e5       	ldi	r25, 0x5F	; 95
 3e8:	2a ee       	ldi	r18, 0xEA	; 234
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	91 50       	subi	r25, 0x01	; 1
 3ee:	20 40       	sbci	r18, 0x00	; 0
 3f0:	80 40       	sbci	r24, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x190>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x19a>
 3f6:	00 00       	nop
 3f8:	0b c0       	rjmp	.+22     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3fa:	9f e5       	ldi	r25, 0x5F	; 95
 3fc:	2a ee       	ldi	r18, 0xEA	; 234
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	91 50       	subi	r25, 0x01	; 1
 402:	20 40       	sbci	r18, 0x00	; 0
 404:	80 40       	sbci	r24, 0x00	; 0
 406:	e1 f7       	brne	.-8      	; 0x400 <__EEPROM_REGION_LENGTH__>
 408:	00 c0       	rjmp	.+0      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40a:	00 00       	nop
				_delay_ms(300);
				while((PINB & (1<<4))==0)
				{
					_delay_ms(300);
					a++;
 40c:	0f 5f       	subi	r16, 0xFF	; 255
 40e:	1f 4f       	sbci	r17, 0xFF	; 255
				lcd_gotoxy(12,0);
				lcd_puts("'C");
				lcd_gotoxy(0,1);
				lcd_puts("Set? Inc? Dec?");
				_delay_ms(300);
				while((PINB & (1<<4))==0)
 410:	b4 9b       	sbis	0x16, 4	; 22
 412:	f3 cf       	rjmp	.-26     	; 0x3fa <main+0x19e>
 414:	0b c0       	rjmp	.+22     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 416:	9f e5       	ldi	r25, 0x5F	; 95
 418:	2a ee       	ldi	r18, 0xEA	; 234
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	91 50       	subi	r25, 0x01	; 1
 41e:	20 40       	sbci	r18, 0x00	; 0
 420:	80 40       	sbci	r24, 0x00	; 0
 422:	e1 f7       	brne	.-8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 426:	00 00       	nop
					a++;
				}
				while((PINB & (1<<7))==0)
				{
					_delay_ms(300);
					a--;
 428:	01 50       	subi	r16, 0x01	; 1
 42a:	11 09       	sbc	r17, r1
				while((PINB & (1<<4))==0)
				{
					_delay_ms(300);
					a++;
				}
				while((PINB & (1<<7))==0)
 42c:	b7 9b       	sbis	0x16, 7	; 22
 42e:	f3 cf       	rjmp	.-26     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 430:	ff c0       	rjmp	.+510    	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
				}
				while((PINB & (1<<1))==0)//enter
				{
					while(1)
					{
						lcd_clrscr();
 432:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
						lcd_home();
 436:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_home>
						lcd_gotoxy(0,0);
 43a:	60 e0       	ldi	r22, 0x00	; 0
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
						lcd_puts("Low temp=");
 442:	82 eb       	ldi	r24, 0xB2	; 178
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
						itoa(b,buffer,10);
 44a:	4a e0       	ldi	r20, 0x0A	; 10
 44c:	50 e0       	ldi	r21, 0x00	; 0
 44e:	be 01       	movw	r22, r28
 450:	6f 5f       	subi	r22, 0xFF	; 255
 452:	7f 4f       	sbci	r23, 0xFF	; 255
 454:	c7 01       	movw	r24, r14
 456:	0e 94 b9 04 	call	0x972	; 0x972 <itoa>
						lcd_puts(buffer);
 45a:	ce 01       	movw	r24, r28
 45c:	01 96       	adiw	r24, 0x01	; 1
 45e:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
						lcd_gotoxy(11,0);
 462:	60 e0       	ldi	r22, 0x00	; 0
 464:	8b e0       	ldi	r24, 0x0B	; 11
 466:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
						lcd_puts("'C");
 46a:	80 ea       	ldi	r24, 0xA0	; 160
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
						lcd_gotoxy(0,1);
 472:	61 e0       	ldi	r22, 0x01	; 1
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
						lcd_puts("Set? Inc? Dec?");
 47a:	83 ea       	ldi	r24, 0xA3	; 163
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 482:	9f e5       	ldi	r25, 0x5F	; 95
 484:	2a ee       	ldi	r18, 0xEA	; 234
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	91 50       	subi	r25, 0x01	; 1
 48a:	20 40       	sbci	r18, 0x00	; 0
 48c:	80 40       	sbci	r24, 0x00	; 0
 48e:	e1 f7       	brne	.-8      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 492:	00 00       	nop
 494:	0c c0       	rjmp	.+24     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 496:	9f e5       	ldi	r25, 0x5F	; 95
 498:	2a ee       	ldi	r18, 0xEA	; 234
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	91 50       	subi	r25, 0x01	; 1
 49e:	20 40       	sbci	r18, 0x00	; 0
 4a0:	80 40       	sbci	r24, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a6:	00 00       	nop
						_delay_ms(300);
						while((PINB & (1<<4))==0)
						{
							_delay_ms(300);
							b++;
 4a8:	9f ef       	ldi	r25, 0xFF	; 255
 4aa:	e9 1a       	sub	r14, r25
 4ac:	f9 0a       	sbc	r15, r25
						lcd_gotoxy(11,0);
						lcd_puts("'C");
						lcd_gotoxy(0,1);
						lcd_puts("Set? Inc? Dec?");
						_delay_ms(300);
						while((PINB & (1<<4))==0)
 4ae:	b4 9b       	sbis	0x16, 4	; 22
 4b0:	f2 cf       	rjmp	.-28     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 4b2:	0c c0       	rjmp	.+24     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4b4:	2f e5       	ldi	r18, 0x5F	; 95
 4b6:	8a ee       	ldi	r24, 0xEA	; 234
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	21 50       	subi	r18, 0x01	; 1
 4bc:	80 40       	sbci	r24, 0x00	; 0
 4be:	90 40       	sbci	r25, 0x00	; 0
 4c0:	e1 f7       	brne	.-8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4c4:	00 00       	nop
							b++;
						}
						while((PINB & (1<<7))==0)
						{
							_delay_ms(300);
							b--;
 4c6:	21 e0       	ldi	r18, 0x01	; 1
 4c8:	e2 1a       	sub	r14, r18
 4ca:	f1 08       	sbc	r15, r1
						while((PINB & (1<<4))==0)
						{
							_delay_ms(300);
							b++;
						}
						while((PINB & (1<<7))==0)
 4cc:	b7 9b       	sbis	0x16, 7	; 22
 4ce:	f2 cf       	rjmp	.-28     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4d0:	ac c0       	rjmp	.+344    	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
						while((PINB & (1<<1))==0)//enter
						{
							while(1)//3is
							{
								measure:
								adc0 = adc_read(0);
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	0e 94 21 01 	call	0x242	; 0x242 <adc_read>
 4d8:	6c 01       	movw	r12, r24
								adc1 = adc_read(6);
 4da:	86 e0       	ldi	r24, 0x06	; 6
 4dc:	0e 94 21 01 	call	0x242	; 0x242 <adc_read>
								s = adc0 - 2 * adc1;
 4e0:	88 0f       	add	r24, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	c8 1a       	sub	r12, r24
 4e6:	d9 0a       	sbc	r13, r25
								temp = s - 259;
 4e8:	83 e0       	ldi	r24, 0x03	; 3
 4ea:	c8 1a       	sub	r12, r24
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	d8 0a       	sbc	r13, r24
								far=(1.8*temp)+32;
 4f0:	b6 01       	movw	r22, r12
 4f2:	0d 2c       	mov	r0, r13
 4f4:	00 0c       	add	r0, r0
 4f6:	88 0b       	sbc	r24, r24
 4f8:	99 0b       	sbc	r25, r25
 4fa:	0e 94 c0 03 	call	0x780	; 0x780 <__floatsisf>
 4fe:	26 e6       	ldi	r18, 0x66	; 102
 500:	36 e6       	ldi	r19, 0x66	; 102
 502:	46 ee       	ldi	r20, 0xE6	; 230
 504:	5f e3       	ldi	r21, 0x3F	; 63
 506:	0e 94 4c 04 	call	0x898	; 0x898 <__mulsf3>
 50a:	20 e0       	ldi	r18, 0x00	; 0
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	40 e0       	ldi	r20, 0x00	; 0
 510:	52 e4       	ldi	r21, 0x42	; 66
 512:	0e 94 1c 03 	call	0x638	; 0x638 <__addsf3>
 516:	0e 94 88 03 	call	0x710	; 0x710 <__fixsfsi>
 51a:	4b 01       	movw	r8, r22
 51c:	5c 01       	movw	r10, r24
								lcd_gotoxy(0,0);
 51e:	60 e0       	ldi	r22, 0x00	; 0
 520:	80 e0       	ldi	r24, 0x00	; 0
 522:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
								itoa(temp,buffer,10);
 526:	4a e0       	ldi	r20, 0x0A	; 10
 528:	50 e0       	ldi	r21, 0x00	; 0
 52a:	be 01       	movw	r22, r28
 52c:	6f 5f       	subi	r22, 0xFF	; 255
 52e:	7f 4f       	sbci	r23, 0xFF	; 255
 530:	c6 01       	movw	r24, r12
 532:	0e 94 b9 04 	call	0x972	; 0x972 <itoa>
								lcd_puts("Temp=");
 536:	8c eb       	ldi	r24, 0xBC	; 188
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
								lcd_puts(buffer);
 53e:	ce 01       	movw	r24, r28
 540:	01 96       	adiw	r24, 0x01	; 1
 542:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
								lcd_gotoxy(7,0);
 546:	60 e0       	ldi	r22, 0x00	; 0
 548:	87 e0       	ldi	r24, 0x07	; 7
 54a:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
								lcd_puts("'C");
 54e:	80 ea       	ldi	r24, 0xA0	; 160
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
								lcd_gotoxy(11,0);
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	8b e0       	ldi	r24, 0x0B	; 11
 55a:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
								itoa(far,buffer,10);
 55e:	4a e0       	ldi	r20, 0x0A	; 10
 560:	50 e0       	ldi	r21, 0x00	; 0
 562:	be 01       	movw	r22, r28
 564:	6f 5f       	subi	r22, 0xFF	; 255
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	c4 01       	movw	r24, r8
 56a:	0e 94 b9 04 	call	0x972	; 0x972 <itoa>
								lcd_puts(buffer);
 56e:	ce 01       	movw	r24, r28
 570:	01 96       	adiw	r24, 0x01	; 1
 572:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
								lcd_gotoxy(14,0);
 576:	60 e0       	ldi	r22, 0x00	; 0
 578:	8e e0       	ldi	r24, 0x0E	; 14
 57a:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
								lcd_puts("'F");
 57e:	82 ec       	ldi	r24, 0xC2	; 194
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
 586:	9f e5       	ldi	r25, 0x5F	; 95
 588:	2a ee       	ldi	r18, 0xEA	; 234
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	91 50       	subi	r25, 0x01	; 1
 58e:	20 40       	sbci	r18, 0x00	; 0
 590:	80 40       	sbci	r24, 0x00	; 0
 592:	e1 f7       	brne	.-8      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 594:	00 c0       	rjmp	.+0      	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 596:	00 00       	nop
								_delay_ms(300);
								if(temp>=a)
 598:	c0 16       	cp	r12, r16
 59a:	d1 06       	cpc	r13, r17
 59c:	7c f0       	brlt	.+30     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
								{
									lcd_clrscr();
 59e:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
									lcd_home();
 5a2:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_home>
									lcd_gotoxy(0,1);
 5a6:	61 e0       	ldi	r22, 0x01	; 1
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
									lcd_puts("High Temp:FAN ON ");
 5ae:	85 ec       	ldi	r24, 0xC5	; 197
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
									PORTD=(1<<PIND0);
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	82 bb       	out	0x12, r24	; 18
 5ba:	20 c0       	rjmp	.+64     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
								}
								else if(temp<=b)
 5bc:	ec 14       	cp	r14, r12
 5be:	fd 04       	cpc	r15, r13
 5c0:	7c f0       	brlt	.+30     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
								{
									lcd_clrscr();
 5c2:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
									lcd_home();
 5c6:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_home>
									lcd_gotoxy(0,1);
 5ca:	61 e0       	ldi	r22, 0x01	; 1
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
									lcd_puts("Low Temp:HEAT ON");
 5d2:	87 ed       	ldi	r24, 0xD7	; 215
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
									PORTD=(1<<PIND7);
 5da:	80 e8       	ldi	r24, 0x80	; 128
 5dc:	82 bb       	out	0x12, r24	; 18
 5de:	0e c0       	rjmp	.+28     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
								}
								else
								{
									lcd_clrscr();
 5e0:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clrscr>
									lcd_home();
 5e4:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_home>
									lcd_gotoxy(0,1);
 5e8:	61 e0       	ldi	r22, 0x01	; 1
 5ea:	80 e0       	ldi	r24, 0x00	; 0
 5ec:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
									lcd_puts("Optimal Temp");
 5f0:	88 ee       	ldi	r24, 0xE8	; 232
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <lcd_puts>
									PORTD=(0<<PIND0);
 5f8:	12 ba       	out	0x12, r1	; 18
									PORTD=(0<<PIND7);
 5fa:	12 ba       	out	0x12, r1	; 18
								}
								if((PINB & (1<<1))==0)
 5fc:	b1 99       	sbic	0x16, 1	; 22
 5fe:	0a c0       	rjmp	.+20     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 600:	9f e5       	ldi	r25, 0x5F	; 95
 602:	2a ee       	ldi	r18, 0xEA	; 234
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	91 50       	subi	r25, 0x01	; 1
 608:	20 40       	sbci	r18, 0x00	; 0
 60a:	80 40       	sbci	r24, 0x00	; 0
 60c:	e1 f7       	brne	.-8      	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 60e:	00 c0       	rjmp	.+0      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 610:	00 00       	nop
 612:	c3 ce       	rjmp	.-634    	; 0x39a <main+0x13e>
								{
									_delay_ms(300);
									goto high;
								}
								wh=a;
								eeprom_update_byte ((uint8_t*) 0, wh);
 614:	60 2f       	mov	r22, r16
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 01 05 	call	0xa02	; 0xa02 <eeprom_update_byte>
								wl=b;
								eeprom_update_byte ((uint8_t*) 4, wl);
 61e:	6e 2d       	mov	r22, r14
 620:	84 e0       	ldi	r24, 0x04	; 4
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	0e 94 01 05 	call	0xa02	; 0xa02 <eeprom_update_byte>
							}//Temp measure
 628:	54 cf       	rjmp	.-344    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
						while((PINB & (1<<7))==0)
						{
							_delay_ms(300);
							b--;
						}
						while((PINB & (1<<1))==0)//enter
 62a:	b1 99       	sbic	0x16, 1	; 22
 62c:	02 cf       	rjmp	.-508    	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 62e:	51 cf       	rjmp	.-350    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
				while((PINB & (1<<7))==0)
				{
					_delay_ms(300);
					a--;
				}
				while((PINB & (1<<1))==0)//enter
 630:	b1 99       	sbic	0x16, 1	; 22
 632:	b3 ce       	rjmp	.-666    	; 0x39a <main+0x13e>
 634:	fe ce       	rjmp	.-516    	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>

00000636 <__subsf3>:
 636:	50 58       	subi	r21, 0x80	; 128

00000638 <__addsf3>:
 638:	bb 27       	eor	r27, r27
 63a:	aa 27       	eor	r26, r26
 63c:	0e 94 33 03 	call	0x666	; 0x666 <__addsf3x>
 640:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_round>
 644:	0e 94 04 04 	call	0x808	; 0x808 <__fp_pscA>
 648:	38 f0       	brcs	.+14     	; 0x658 <__addsf3+0x20>
 64a:	0e 94 0b 04 	call	0x816	; 0x816 <__fp_pscB>
 64e:	20 f0       	brcs	.+8      	; 0x658 <__addsf3+0x20>
 650:	39 f4       	brne	.+14     	; 0x660 <__addsf3+0x28>
 652:	9f 3f       	cpi	r25, 0xFF	; 255
 654:	19 f4       	brne	.+6      	; 0x65c <__addsf3+0x24>
 656:	26 f4       	brtc	.+8      	; 0x660 <__addsf3+0x28>
 658:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_nan>
 65c:	0e f4       	brtc	.+2      	; 0x660 <__addsf3+0x28>
 65e:	e0 95       	com	r30
 660:	e7 fb       	bst	r30, 7
 662:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__fp_inf>

00000666 <__addsf3x>:
 666:	e9 2f       	mov	r30, r25
 668:	0e 94 23 04 	call	0x846	; 0x846 <__fp_split3>
 66c:	58 f3       	brcs	.-42     	; 0x644 <__addsf3+0xc>
 66e:	ba 17       	cp	r27, r26
 670:	62 07       	cpc	r22, r18
 672:	73 07       	cpc	r23, r19
 674:	84 07       	cpc	r24, r20
 676:	95 07       	cpc	r25, r21
 678:	20 f0       	brcs	.+8      	; 0x682 <__addsf3x+0x1c>
 67a:	79 f4       	brne	.+30     	; 0x69a <__addsf3x+0x34>
 67c:	a6 f5       	brtc	.+104    	; 0x6e6 <__addsf3x+0x80>
 67e:	0c 94 45 04 	jmp	0x88a	; 0x88a <__fp_zero>
 682:	0e f4       	brtc	.+2      	; 0x686 <__addsf3x+0x20>
 684:	e0 95       	com	r30
 686:	0b 2e       	mov	r0, r27
 688:	ba 2f       	mov	r27, r26
 68a:	a0 2d       	mov	r26, r0
 68c:	0b 01       	movw	r0, r22
 68e:	b9 01       	movw	r22, r18
 690:	90 01       	movw	r18, r0
 692:	0c 01       	movw	r0, r24
 694:	ca 01       	movw	r24, r20
 696:	a0 01       	movw	r20, r0
 698:	11 24       	eor	r1, r1
 69a:	ff 27       	eor	r31, r31
 69c:	59 1b       	sub	r21, r25
 69e:	99 f0       	breq	.+38     	; 0x6c6 <__addsf3x+0x60>
 6a0:	59 3f       	cpi	r21, 0xF9	; 249
 6a2:	50 f4       	brcc	.+20     	; 0x6b8 <__addsf3x+0x52>
 6a4:	50 3e       	cpi	r21, 0xE0	; 224
 6a6:	68 f1       	brcs	.+90     	; 0x702 <__addsf3x+0x9c>
 6a8:	1a 16       	cp	r1, r26
 6aa:	f0 40       	sbci	r31, 0x00	; 0
 6ac:	a2 2f       	mov	r26, r18
 6ae:	23 2f       	mov	r18, r19
 6b0:	34 2f       	mov	r19, r20
 6b2:	44 27       	eor	r20, r20
 6b4:	58 5f       	subi	r21, 0xF8	; 248
 6b6:	f3 cf       	rjmp	.-26     	; 0x69e <__addsf3x+0x38>
 6b8:	46 95       	lsr	r20
 6ba:	37 95       	ror	r19
 6bc:	27 95       	ror	r18
 6be:	a7 95       	ror	r26
 6c0:	f0 40       	sbci	r31, 0x00	; 0
 6c2:	53 95       	inc	r21
 6c4:	c9 f7       	brne	.-14     	; 0x6b8 <__addsf3x+0x52>
 6c6:	7e f4       	brtc	.+30     	; 0x6e6 <__addsf3x+0x80>
 6c8:	1f 16       	cp	r1, r31
 6ca:	ba 0b       	sbc	r27, r26
 6cc:	62 0b       	sbc	r22, r18
 6ce:	73 0b       	sbc	r23, r19
 6d0:	84 0b       	sbc	r24, r20
 6d2:	ba f0       	brmi	.+46     	; 0x702 <__addsf3x+0x9c>
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	a1 f0       	breq	.+40     	; 0x700 <__addsf3x+0x9a>
 6d8:	ff 0f       	add	r31, r31
 6da:	bb 1f       	adc	r27, r27
 6dc:	66 1f       	adc	r22, r22
 6de:	77 1f       	adc	r23, r23
 6e0:	88 1f       	adc	r24, r24
 6e2:	c2 f7       	brpl	.-16     	; 0x6d4 <__addsf3x+0x6e>
 6e4:	0e c0       	rjmp	.+28     	; 0x702 <__addsf3x+0x9c>
 6e6:	ba 0f       	add	r27, r26
 6e8:	62 1f       	adc	r22, r18
 6ea:	73 1f       	adc	r23, r19
 6ec:	84 1f       	adc	r24, r20
 6ee:	48 f4       	brcc	.+18     	; 0x702 <__addsf3x+0x9c>
 6f0:	87 95       	ror	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f7 95       	ror	r31
 6fa:	9e 3f       	cpi	r25, 0xFE	; 254
 6fc:	08 f0       	brcs	.+2      	; 0x700 <__addsf3x+0x9a>
 6fe:	b0 cf       	rjmp	.-160    	; 0x660 <__addsf3+0x28>
 700:	93 95       	inc	r25
 702:	88 0f       	add	r24, r24
 704:	08 f0       	brcs	.+2      	; 0x708 <__addsf3x+0xa2>
 706:	99 27       	eor	r25, r25
 708:	ee 0f       	add	r30, r30
 70a:	97 95       	ror	r25
 70c:	87 95       	ror	r24
 70e:	08 95       	ret

00000710 <__fixsfsi>:
 710:	0e 94 8f 03 	call	0x71e	; 0x71e <__fixunssfsi>
 714:	68 94       	set
 716:	b1 11       	cpse	r27, r1
 718:	0c 94 46 04 	jmp	0x88c	; 0x88c <__fp_szero>
 71c:	08 95       	ret

0000071e <__fixunssfsi>:
 71e:	0e 94 2b 04 	call	0x856	; 0x856 <__fp_splitA>
 722:	88 f0       	brcs	.+34     	; 0x746 <__fixunssfsi+0x28>
 724:	9f 57       	subi	r25, 0x7F	; 127
 726:	98 f0       	brcs	.+38     	; 0x74e <__fixunssfsi+0x30>
 728:	b9 2f       	mov	r27, r25
 72a:	99 27       	eor	r25, r25
 72c:	b7 51       	subi	r27, 0x17	; 23
 72e:	b0 f0       	brcs	.+44     	; 0x75c <__fixunssfsi+0x3e>
 730:	e1 f0       	breq	.+56     	; 0x76a <__fixunssfsi+0x4c>
 732:	66 0f       	add	r22, r22
 734:	77 1f       	adc	r23, r23
 736:	88 1f       	adc	r24, r24
 738:	99 1f       	adc	r25, r25
 73a:	1a f0       	brmi	.+6      	; 0x742 <__fixunssfsi+0x24>
 73c:	ba 95       	dec	r27
 73e:	c9 f7       	brne	.-14     	; 0x732 <__fixunssfsi+0x14>
 740:	14 c0       	rjmp	.+40     	; 0x76a <__fixunssfsi+0x4c>
 742:	b1 30       	cpi	r27, 0x01	; 1
 744:	91 f0       	breq	.+36     	; 0x76a <__fixunssfsi+0x4c>
 746:	0e 94 45 04 	call	0x88a	; 0x88a <__fp_zero>
 74a:	b1 e0       	ldi	r27, 0x01	; 1
 74c:	08 95       	ret
 74e:	0c 94 45 04 	jmp	0x88a	; 0x88a <__fp_zero>
 752:	67 2f       	mov	r22, r23
 754:	78 2f       	mov	r23, r24
 756:	88 27       	eor	r24, r24
 758:	b8 5f       	subi	r27, 0xF8	; 248
 75a:	39 f0       	breq	.+14     	; 0x76a <__fixunssfsi+0x4c>
 75c:	b9 3f       	cpi	r27, 0xF9	; 249
 75e:	cc f3       	brlt	.-14     	; 0x752 <__fixunssfsi+0x34>
 760:	86 95       	lsr	r24
 762:	77 95       	ror	r23
 764:	67 95       	ror	r22
 766:	b3 95       	inc	r27
 768:	d9 f7       	brne	.-10     	; 0x760 <__fixunssfsi+0x42>
 76a:	3e f4       	brtc	.+14     	; 0x77a <__fixunssfsi+0x5c>
 76c:	90 95       	com	r25
 76e:	80 95       	com	r24
 770:	70 95       	com	r23
 772:	61 95       	neg	r22
 774:	7f 4f       	sbci	r23, 0xFF	; 255
 776:	8f 4f       	sbci	r24, 0xFF	; 255
 778:	9f 4f       	sbci	r25, 0xFF	; 255
 77a:	08 95       	ret

0000077c <__floatunsisf>:
 77c:	e8 94       	clt
 77e:	09 c0       	rjmp	.+18     	; 0x792 <__floatsisf+0x12>

00000780 <__floatsisf>:
 780:	97 fb       	bst	r25, 7
 782:	3e f4       	brtc	.+14     	; 0x792 <__floatsisf+0x12>
 784:	90 95       	com	r25
 786:	80 95       	com	r24
 788:	70 95       	com	r23
 78a:	61 95       	neg	r22
 78c:	7f 4f       	sbci	r23, 0xFF	; 255
 78e:	8f 4f       	sbci	r24, 0xFF	; 255
 790:	9f 4f       	sbci	r25, 0xFF	; 255
 792:	99 23       	and	r25, r25
 794:	a9 f0       	breq	.+42     	; 0x7c0 <__floatsisf+0x40>
 796:	f9 2f       	mov	r31, r25
 798:	96 e9       	ldi	r25, 0x96	; 150
 79a:	bb 27       	eor	r27, r27
 79c:	93 95       	inc	r25
 79e:	f6 95       	lsr	r31
 7a0:	87 95       	ror	r24
 7a2:	77 95       	ror	r23
 7a4:	67 95       	ror	r22
 7a6:	b7 95       	ror	r27
 7a8:	f1 11       	cpse	r31, r1
 7aa:	f8 cf       	rjmp	.-16     	; 0x79c <__floatsisf+0x1c>
 7ac:	fa f4       	brpl	.+62     	; 0x7ec <__floatsisf+0x6c>
 7ae:	bb 0f       	add	r27, r27
 7b0:	11 f4       	brne	.+4      	; 0x7b6 <__floatsisf+0x36>
 7b2:	60 ff       	sbrs	r22, 0
 7b4:	1b c0       	rjmp	.+54     	; 0x7ec <__floatsisf+0x6c>
 7b6:	6f 5f       	subi	r22, 0xFF	; 255
 7b8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ba:	8f 4f       	sbci	r24, 0xFF	; 255
 7bc:	9f 4f       	sbci	r25, 0xFF	; 255
 7be:	16 c0       	rjmp	.+44     	; 0x7ec <__floatsisf+0x6c>
 7c0:	88 23       	and	r24, r24
 7c2:	11 f0       	breq	.+4      	; 0x7c8 <__floatsisf+0x48>
 7c4:	96 e9       	ldi	r25, 0x96	; 150
 7c6:	11 c0       	rjmp	.+34     	; 0x7ea <__floatsisf+0x6a>
 7c8:	77 23       	and	r23, r23
 7ca:	21 f0       	breq	.+8      	; 0x7d4 <__floatsisf+0x54>
 7cc:	9e e8       	ldi	r25, 0x8E	; 142
 7ce:	87 2f       	mov	r24, r23
 7d0:	76 2f       	mov	r23, r22
 7d2:	05 c0       	rjmp	.+10     	; 0x7de <__floatsisf+0x5e>
 7d4:	66 23       	and	r22, r22
 7d6:	71 f0       	breq	.+28     	; 0x7f4 <__floatsisf+0x74>
 7d8:	96 e8       	ldi	r25, 0x86	; 134
 7da:	86 2f       	mov	r24, r22
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	60 e0       	ldi	r22, 0x00	; 0
 7e0:	2a f0       	brmi	.+10     	; 0x7ec <__floatsisf+0x6c>
 7e2:	9a 95       	dec	r25
 7e4:	66 0f       	add	r22, r22
 7e6:	77 1f       	adc	r23, r23
 7e8:	88 1f       	adc	r24, r24
 7ea:	da f7       	brpl	.-10     	; 0x7e2 <__floatsisf+0x62>
 7ec:	88 0f       	add	r24, r24
 7ee:	96 95       	lsr	r25
 7f0:	87 95       	ror	r24
 7f2:	97 f9       	bld	r25, 7
 7f4:	08 95       	ret

000007f6 <__fp_inf>:
 7f6:	97 f9       	bld	r25, 7
 7f8:	9f 67       	ori	r25, 0x7F	; 127
 7fa:	80 e8       	ldi	r24, 0x80	; 128
 7fc:	70 e0       	ldi	r23, 0x00	; 0
 7fe:	60 e0       	ldi	r22, 0x00	; 0
 800:	08 95       	ret

00000802 <__fp_nan>:
 802:	9f ef       	ldi	r25, 0xFF	; 255
 804:	80 ec       	ldi	r24, 0xC0	; 192
 806:	08 95       	ret

00000808 <__fp_pscA>:
 808:	00 24       	eor	r0, r0
 80a:	0a 94       	dec	r0
 80c:	16 16       	cp	r1, r22
 80e:	17 06       	cpc	r1, r23
 810:	18 06       	cpc	r1, r24
 812:	09 06       	cpc	r0, r25
 814:	08 95       	ret

00000816 <__fp_pscB>:
 816:	00 24       	eor	r0, r0
 818:	0a 94       	dec	r0
 81a:	12 16       	cp	r1, r18
 81c:	13 06       	cpc	r1, r19
 81e:	14 06       	cpc	r1, r20
 820:	05 06       	cpc	r0, r21
 822:	08 95       	ret

00000824 <__fp_round>:
 824:	09 2e       	mov	r0, r25
 826:	03 94       	inc	r0
 828:	00 0c       	add	r0, r0
 82a:	11 f4       	brne	.+4      	; 0x830 <__fp_round+0xc>
 82c:	88 23       	and	r24, r24
 82e:	52 f0       	brmi	.+20     	; 0x844 <__fp_round+0x20>
 830:	bb 0f       	add	r27, r27
 832:	40 f4       	brcc	.+16     	; 0x844 <__fp_round+0x20>
 834:	bf 2b       	or	r27, r31
 836:	11 f4       	brne	.+4      	; 0x83c <__fp_round+0x18>
 838:	60 ff       	sbrs	r22, 0
 83a:	04 c0       	rjmp	.+8      	; 0x844 <__fp_round+0x20>
 83c:	6f 5f       	subi	r22, 0xFF	; 255
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	08 95       	ret

00000846 <__fp_split3>:
 846:	57 fd       	sbrc	r21, 7
 848:	90 58       	subi	r25, 0x80	; 128
 84a:	44 0f       	add	r20, r20
 84c:	55 1f       	adc	r21, r21
 84e:	59 f0       	breq	.+22     	; 0x866 <__stack+0x7>
 850:	5f 3f       	cpi	r21, 0xFF	; 255
 852:	71 f0       	breq	.+28     	; 0x870 <__stack+0x11>
 854:	47 95       	ror	r20

00000856 <__fp_splitA>:
 856:	88 0f       	add	r24, r24
 858:	97 fb       	bst	r25, 7
 85a:	99 1f       	adc	r25, r25
 85c:	61 f0       	breq	.+24     	; 0x876 <__stack+0x17>
 85e:	9f 3f       	cpi	r25, 0xFF	; 255
 860:	79 f0       	breq	.+30     	; 0x880 <__stack+0x21>
 862:	87 95       	ror	r24
 864:	08 95       	ret
 866:	12 16       	cp	r1, r18
 868:	13 06       	cpc	r1, r19
 86a:	14 06       	cpc	r1, r20
 86c:	55 1f       	adc	r21, r21
 86e:	f2 cf       	rjmp	.-28     	; 0x854 <__fp_split3+0xe>
 870:	46 95       	lsr	r20
 872:	f1 df       	rcall	.-30     	; 0x856 <__fp_splitA>
 874:	08 c0       	rjmp	.+16     	; 0x886 <__stack+0x27>
 876:	16 16       	cp	r1, r22
 878:	17 06       	cpc	r1, r23
 87a:	18 06       	cpc	r1, r24
 87c:	99 1f       	adc	r25, r25
 87e:	f1 cf       	rjmp	.-30     	; 0x862 <__stack+0x3>
 880:	86 95       	lsr	r24
 882:	71 05       	cpc	r23, r1
 884:	61 05       	cpc	r22, r1
 886:	08 94       	sec
 888:	08 95       	ret

0000088a <__fp_zero>:
 88a:	e8 94       	clt

0000088c <__fp_szero>:
 88c:	bb 27       	eor	r27, r27
 88e:	66 27       	eor	r22, r22
 890:	77 27       	eor	r23, r23
 892:	cb 01       	movw	r24, r22
 894:	97 f9       	bld	r25, 7
 896:	08 95       	ret

00000898 <__mulsf3>:
 898:	0e 94 5f 04 	call	0x8be	; 0x8be <__mulsf3x>
 89c:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_round>
 8a0:	0e 94 04 04 	call	0x808	; 0x808 <__fp_pscA>
 8a4:	38 f0       	brcs	.+14     	; 0x8b4 <__mulsf3+0x1c>
 8a6:	0e 94 0b 04 	call	0x816	; 0x816 <__fp_pscB>
 8aa:	20 f0       	brcs	.+8      	; 0x8b4 <__mulsf3+0x1c>
 8ac:	95 23       	and	r25, r21
 8ae:	11 f0       	breq	.+4      	; 0x8b4 <__mulsf3+0x1c>
 8b0:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__fp_inf>
 8b4:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_nan>
 8b8:	11 24       	eor	r1, r1
 8ba:	0c 94 46 04 	jmp	0x88c	; 0x88c <__fp_szero>

000008be <__mulsf3x>:
 8be:	0e 94 23 04 	call	0x846	; 0x846 <__fp_split3>
 8c2:	70 f3       	brcs	.-36     	; 0x8a0 <__mulsf3+0x8>

000008c4 <__mulsf3_pse>:
 8c4:	95 9f       	mul	r25, r21
 8c6:	c1 f3       	breq	.-16     	; 0x8b8 <__mulsf3+0x20>
 8c8:	95 0f       	add	r25, r21
 8ca:	50 e0       	ldi	r21, 0x00	; 0
 8cc:	55 1f       	adc	r21, r21
 8ce:	62 9f       	mul	r22, r18
 8d0:	f0 01       	movw	r30, r0
 8d2:	72 9f       	mul	r23, r18
 8d4:	bb 27       	eor	r27, r27
 8d6:	f0 0d       	add	r31, r0
 8d8:	b1 1d       	adc	r27, r1
 8da:	63 9f       	mul	r22, r19
 8dc:	aa 27       	eor	r26, r26
 8de:	f0 0d       	add	r31, r0
 8e0:	b1 1d       	adc	r27, r1
 8e2:	aa 1f       	adc	r26, r26
 8e4:	64 9f       	mul	r22, r20
 8e6:	66 27       	eor	r22, r22
 8e8:	b0 0d       	add	r27, r0
 8ea:	a1 1d       	adc	r26, r1
 8ec:	66 1f       	adc	r22, r22
 8ee:	82 9f       	mul	r24, r18
 8f0:	22 27       	eor	r18, r18
 8f2:	b0 0d       	add	r27, r0
 8f4:	a1 1d       	adc	r26, r1
 8f6:	62 1f       	adc	r22, r18
 8f8:	73 9f       	mul	r23, r19
 8fa:	b0 0d       	add	r27, r0
 8fc:	a1 1d       	adc	r26, r1
 8fe:	62 1f       	adc	r22, r18
 900:	83 9f       	mul	r24, r19
 902:	a0 0d       	add	r26, r0
 904:	61 1d       	adc	r22, r1
 906:	22 1f       	adc	r18, r18
 908:	74 9f       	mul	r23, r20
 90a:	33 27       	eor	r19, r19
 90c:	a0 0d       	add	r26, r0
 90e:	61 1d       	adc	r22, r1
 910:	23 1f       	adc	r18, r19
 912:	84 9f       	mul	r24, r20
 914:	60 0d       	add	r22, r0
 916:	21 1d       	adc	r18, r1
 918:	82 2f       	mov	r24, r18
 91a:	76 2f       	mov	r23, r22
 91c:	6a 2f       	mov	r22, r26
 91e:	11 24       	eor	r1, r1
 920:	9f 57       	subi	r25, 0x7F	; 127
 922:	50 40       	sbci	r21, 0x00	; 0
 924:	9a f0       	brmi	.+38     	; 0x94c <__mulsf3_pse+0x88>
 926:	f1 f0       	breq	.+60     	; 0x964 <__mulsf3_pse+0xa0>
 928:	88 23       	and	r24, r24
 92a:	4a f0       	brmi	.+18     	; 0x93e <__mulsf3_pse+0x7a>
 92c:	ee 0f       	add	r30, r30
 92e:	ff 1f       	adc	r31, r31
 930:	bb 1f       	adc	r27, r27
 932:	66 1f       	adc	r22, r22
 934:	77 1f       	adc	r23, r23
 936:	88 1f       	adc	r24, r24
 938:	91 50       	subi	r25, 0x01	; 1
 93a:	50 40       	sbci	r21, 0x00	; 0
 93c:	a9 f7       	brne	.-22     	; 0x928 <__mulsf3_pse+0x64>
 93e:	9e 3f       	cpi	r25, 0xFE	; 254
 940:	51 05       	cpc	r21, r1
 942:	80 f0       	brcs	.+32     	; 0x964 <__mulsf3_pse+0xa0>
 944:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__fp_inf>
 948:	0c 94 46 04 	jmp	0x88c	; 0x88c <__fp_szero>
 94c:	5f 3f       	cpi	r21, 0xFF	; 255
 94e:	e4 f3       	brlt	.-8      	; 0x948 <__mulsf3_pse+0x84>
 950:	98 3e       	cpi	r25, 0xE8	; 232
 952:	d4 f3       	brlt	.-12     	; 0x948 <__mulsf3_pse+0x84>
 954:	86 95       	lsr	r24
 956:	77 95       	ror	r23
 958:	67 95       	ror	r22
 95a:	b7 95       	ror	r27
 95c:	f7 95       	ror	r31
 95e:	e7 95       	ror	r30
 960:	9f 5f       	subi	r25, 0xFF	; 255
 962:	c1 f7       	brne	.-16     	; 0x954 <__mulsf3_pse+0x90>
 964:	fe 2b       	or	r31, r30
 966:	88 0f       	add	r24, r24
 968:	91 1d       	adc	r25, r1
 96a:	96 95       	lsr	r25
 96c:	87 95       	ror	r24
 96e:	97 f9       	bld	r25, 7
 970:	08 95       	ret

00000972 <itoa>:
 972:	45 32       	cpi	r20, 0x25	; 37
 974:	51 05       	cpc	r21, r1
 976:	20 f4       	brcc	.+8      	; 0x980 <itoa+0xe>
 978:	42 30       	cpi	r20, 0x02	; 2
 97a:	10 f0       	brcs	.+4      	; 0x980 <itoa+0xe>
 97c:	0c 94 c4 04 	jmp	0x988	; 0x988 <__itoa_ncheck>
 980:	fb 01       	movw	r30, r22
 982:	10 82       	st	Z, r1
 984:	cb 01       	movw	r24, r22
 986:	08 95       	ret

00000988 <__itoa_ncheck>:
 988:	bb 27       	eor	r27, r27
 98a:	4a 30       	cpi	r20, 0x0A	; 10
 98c:	31 f4       	brne	.+12     	; 0x99a <__itoa_ncheck+0x12>
 98e:	99 23       	and	r25, r25
 990:	22 f4       	brpl	.+8      	; 0x99a <__itoa_ncheck+0x12>
 992:	bd e2       	ldi	r27, 0x2D	; 45
 994:	90 95       	com	r25
 996:	81 95       	neg	r24
 998:	9f 4f       	sbci	r25, 0xFF	; 255
 99a:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__utoa_common>

0000099e <__utoa_ncheck>:
 99e:	bb 27       	eor	r27, r27

000009a0 <__utoa_common>:
 9a0:	fb 01       	movw	r30, r22
 9a2:	55 27       	eor	r21, r21
 9a4:	aa 27       	eor	r26, r26
 9a6:	88 0f       	add	r24, r24
 9a8:	99 1f       	adc	r25, r25
 9aa:	aa 1f       	adc	r26, r26
 9ac:	a4 17       	cp	r26, r20
 9ae:	10 f0       	brcs	.+4      	; 0x9b4 <__utoa_common+0x14>
 9b0:	a4 1b       	sub	r26, r20
 9b2:	83 95       	inc	r24
 9b4:	50 51       	subi	r21, 0x10	; 16
 9b6:	b9 f7       	brne	.-18     	; 0x9a6 <__utoa_common+0x6>
 9b8:	a0 5d       	subi	r26, 0xD0	; 208
 9ba:	aa 33       	cpi	r26, 0x3A	; 58
 9bc:	08 f0       	brcs	.+2      	; 0x9c0 <__utoa_common+0x20>
 9be:	a9 5d       	subi	r26, 0xD9	; 217
 9c0:	a1 93       	st	Z+, r26
 9c2:	00 97       	sbiw	r24, 0x00	; 0
 9c4:	79 f7       	brne	.-34     	; 0x9a4 <__utoa_common+0x4>
 9c6:	b1 11       	cpse	r27, r1
 9c8:	b1 93       	st	Z+, r27
 9ca:	11 92       	st	Z+, r1
 9cc:	cb 01       	movw	r24, r22
 9ce:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <strrev>

000009d2 <strrev>:
 9d2:	dc 01       	movw	r26, r24
 9d4:	fc 01       	movw	r30, r24
 9d6:	67 2f       	mov	r22, r23
 9d8:	71 91       	ld	r23, Z+
 9da:	77 23       	and	r23, r23
 9dc:	e1 f7       	brne	.-8      	; 0x9d6 <strrev+0x4>
 9de:	32 97       	sbiw	r30, 0x02	; 2
 9e0:	04 c0       	rjmp	.+8      	; 0x9ea <strrev+0x18>
 9e2:	7c 91       	ld	r23, X
 9e4:	6d 93       	st	X+, r22
 9e6:	70 83       	st	Z, r23
 9e8:	62 91       	ld	r22, -Z
 9ea:	ae 17       	cp	r26, r30
 9ec:	bf 07       	cpc	r27, r31
 9ee:	c8 f3       	brcs	.-14     	; 0x9e2 <strrev+0x10>
 9f0:	08 95       	ret

000009f2 <eeprom_read_byte>:
 9f2:	e1 99       	sbic	0x1c, 1	; 28
 9f4:	fe cf       	rjmp	.-4      	; 0x9f2 <eeprom_read_byte>
 9f6:	9f bb       	out	0x1f, r25	; 31
 9f8:	8e bb       	out	0x1e, r24	; 30
 9fa:	e0 9a       	sbi	0x1c, 0	; 28
 9fc:	99 27       	eor	r25, r25
 9fe:	8d b3       	in	r24, 0x1d	; 29
 a00:	08 95       	ret

00000a02 <eeprom_update_byte>:
 a02:	26 2f       	mov	r18, r22

00000a04 <eeprom_update_r18>:
 a04:	e1 99       	sbic	0x1c, 1	; 28
 a06:	fe cf       	rjmp	.-4      	; 0xa04 <eeprom_update_r18>
 a08:	9f bb       	out	0x1f, r25	; 31
 a0a:	8e bb       	out	0x1e, r24	; 30
 a0c:	e0 9a       	sbi	0x1c, 0	; 28
 a0e:	01 97       	sbiw	r24, 0x01	; 1
 a10:	0d b2       	in	r0, 0x1d	; 29
 a12:	02 16       	cp	r0, r18
 a14:	31 f0       	breq	.+12     	; 0xa22 <eeprom_update_r18+0x1e>
 a16:	2d bb       	out	0x1d, r18	; 29
 a18:	0f b6       	in	r0, 0x3f	; 63
 a1a:	f8 94       	cli
 a1c:	e2 9a       	sbi	0x1c, 2	; 28
 a1e:	e1 9a       	sbi	0x1c, 1	; 28
 a20:	0f be       	out	0x3f, r0	; 63
 a22:	08 95       	ret

00000a24 <_exit>:
 a24:	f8 94       	cli

00000a26 <__stop_program>:
 a26:	ff cf       	rjmp	.-2      	; 0xa26 <__stop_program>
